tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: TOSCA example for specifying a Mesos Cluster

topology_template:

  inputs:
    iam_token:
      type: string
      default: "my_token"

    iam_client_id:
      type: string
      default: "myclient_id"

    iam_client_secret:
      type: string
      default: "myclient_secret"

    cms_local_site:
      type: string
      default: "T3_IT_Opportunistic_pg"
      
    cms_stageoutsite:
      type: string
      default: "T1_IT_CNAF_Disk"
      
    cms_stageoutserver:
      type: string
      default: "storm-fe-cms.cr.cnaf.infn.it"

    cms_stageoutprefix:
      type: string
      default: "srm://storm-fe-cms.cr.cnaf.infn.it:8444/srm/managerv2?SFN=/cmsdisk/"

    cms_stageoutsite_fallback:
      type: string
      default: "DUMMY"
         
    cms_stageoutserver_fallback: 
      type: string 
      default: "DUMMY"

    cms_stageoutprefix_fallback:
      type: string 
      default: "DUMMY"

    cms_input_path:
      type: string
      default: "DUMMY"

    cms_input_protocol:
      type: string
      default: "xrootd"

    onedatatoken:
      type: string
      default: "DUMMYTOKEN"

    onedatacache:
      type: string
      default: "160.44.194.19"

    monitordb_ip:
      type: string 
      default: "193.205.222.247:8080"
    
    elasticsearch_secret:
      type: string
      default: "5z0O87gnSf"

  node_templates:


    mesos_master:
      type: tosca.nodes.indigo.MesosMaster
      properties:
        marathon_password: test_pass
        chronos_password: test_pass
        mesos_masters_list: { get_attribute: [ mesos-master-server, private_address ] }
      requirements:
        - host: mesos-master-server


    cms_services:
      type: tosca.nodes.indigo.CmsServices
      properties:
        marathon_password: test_pass
        mysquid_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        proxycache_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        iam_access_token: { get_input: iam_token }
        iam_client_id: { get_input: iam_client_id }
        iam_client_secret: { get_input: iam_client_secret }
        cms_local_site: { get_input: cms_local_site }
        onedatatoken: { get_input: onedatatoken }
        onedatacache: { get_input: onedatacache }
      requirements:
        - host: mesos_master


    mesos_slave:
      type: tosca.nodes.indigo.MesosSlave
      properties:
        master_ips: { get_attribute: [ mesos-master-server, private_address ] }
        front_end_ip: { get_attribute: [ mesos-master-server, private_address, 0 ] }
      requirements:
        - host: mesos-slave-server

    cms_wn:
      type: tosca.nodes.indigo.CmsWnConfig
      properties:
        mysquid_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        proxycache_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        cms_local_site: { get_input: cms_local_site }
        cms_stageoutsite: { get_input: cms_stageoutsite }
        cms_stageoutserver: { get_input: cms_stageoutserver }
        cms_stageoutprefix: { get_input: cms_stageoutprefix }
        cms_stageoutsite_fallback: { get_input: cms_stageoutsite_fallback }
        cms_stageoutserver_fallback: { get_input: cms_stageoutserver_fallback }
        cms_stageoutprefix_fallback: { get_input: cms_stageoutprefix_fallback }
        cms_input_protocol: { get_input: cms_input_protocol }
        cms_input_path: { get_input: cms_input_path }
        monitordb_ip: { get_input: monitordb_ip }
        elasticsearch_secret: { get_input: elasticsearch_secret }
      requirements:
        - host: mesos_slave


    mesos_load_balancer:
      type: tosca.nodes.indigo.MesosLoadBalancer
      properties:
        master_ips: { get_attribute: [ mesos-master-server, private_address ] }
        marathon_password: test_pass        
      requirements:
        - host: mesos-lb-server

    mesos-master-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            dns_name: mesosserverpublic
            ports:
              mesos_port:
                protocol: tcp
                source: 5050
              marathon_port:
                protocol: tcp
                source: 8080
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: 4
            mem_size: 8 GB
        os:
          properties:
            image: linux-ubuntu-14.04-vmi


    mesos-slave-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: 3
        host:
          properties:
            num_cpus: 2
            mem_size: 4 GB
        os:
          properties:
            image: linux-ubuntu-14.04-vmi

    mesos-lb-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            dns_name: mesoslb
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: 2
            mem_size: 2 GB
        os:
          properties:
            image: linux-ubuntu-14.04-vmi

  outputs:
    mesos_lb_ip:
      value: { get_attribute: [ mesos-lb-server, public_address ] }
    mesos_endpoint:
      value: { concat: [ 'http://', get_attribute: [ mesos-master-server, public_address, 0 ], ':5050' ] }
    marathon_endpoint:
      value: { concat: [ 'http://', get_attribute: [ mesos-master-server, public_address, 0 ], ':8080' ] }

