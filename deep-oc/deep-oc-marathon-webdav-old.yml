tosca_definitions_version: "tosca_simple_yaml_1_0"
imports:
- indigo_custom_types: "https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml"

description: >
            A general template to start a deployment on Marathon with the access to a remote Webdav and/or Onedata storage.

metadata:
  display_name: General template for starting a job
  tag: CPU/GPU

topology_template:
  inputs:

    docker_image:
      type: string
      description: Docker image to deploy from Docker Hub 
      required: yes

    docker_privileged:
      type: string
      description: Equivalent of --privileged docker flag
      required: yes
      default: false
      constraints:
      - valid_values: [ false, true ]

    mem_size:
      type: string
      description: Amount of memory
      required: no
      default: "4096 MB"

    num_cpus:
      type: integer
      description: Number of required CPUs
      required: no
      default: 1

    num_gpus:
      type: integer
      description: Number of required GPUs
      required: no
      default: 0

    flaat_disable:
      type: string
      description: Disable flaat authentication
      required: no
      default: "no"
      constraints:
      - valid_values: [ "no", "yes" ]

    oneclient_token:
      type: string
      description: Set ONECLIENT_ACCESS_TOKEN to access OneData
      required: no

    oneclient_provider:
      type: string
      description: OneData default provider (e.g. oprov.ifca.es, oneprovider.fedcloud.eu, cloud-90-147-75-163.cloud.ba.infn.it)
      required: no
      default: "oprov.ifca.es"

    onedata_mount:
      type: string
      description: Local mount point for OneData, ONEDATA_MOUNT_POINT
      required: no
      default: "/mnt/onedata"

    rclone_conf:
      type: string
      description: rclone.conf location
      required: no
      default: "/srv/.rclone/rclone.conf"

    rclone_url:
      type: string
      description: Remote storage link to be accessed via rclone (webdav)
      required: no
      default: "https://nc.deep-hybrid-datacloud.eu/remote.php/webdav/"

    rclone_vendor:
      type: string
      description: rclone vendor (webdav)
      required: no
      default: "nextcloud"

    rclone_user:
      type: string
      description: rclone user to access a webdav remote storage
      required: no
      default: ""

    rclone_password:
      type: string
      description: rclone user password
      required: no
      default: ""

    jupyter_password:
      type: string
      description: Password for JupyterLab. Should have at least 9 characters.
      required: no
      default: ""

    app_in_out_base_dir:
      type: string
      description: Base directory for input and output data (e.g. training data, models)
      required: no

    run_command:
      type: string
      description: Default command to run
      required: yes
      default: "deepaas-run --listen-ip=0.0.0.0 --listen-port=5000"

  node_templates:
    Docker:
      type: "tosca.nodes.indigo.Container.Runtime.Docker"
      capabilities:
        host:
          properties:
            publish_all: false
            publish_ports:
            - protocol: "tcp"
              source: 5000
            - protocol: "tcp"
              source: 6006
            - protocol: "tcp"
              source: 8888
            mem_size: { get_input: mem_size }
            num_cpus: { get_input: num_cpus }
            num_gpus: { get_input: num_gpus }
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    marathon:
      type: "tosca.nodes.indigo.Container.Application.Docker.Marathon"
      properties:
        force_pull_image: true
        command: { get_input: run_command }
        environment_variables:
          ONECLIENT_ACCESS_TOKEN: { get_input: oneclient_token }
          ONECLIENT_PROVIDER_HOST: { get_input: oneclient_provider }
          ONEDATA_MOUNT_POINT: { get_input: onedata_mount }
          RCLONE_CONFIG: { get_input: rclone_conf }
          RCLONE_CONFIG_RSHARE_TYPE: webdav
          RCLONE_CONFIG_RSHARE_URL: { get_input: rclone_url }
          RCLONE_CONFIG_RSHARE_VENDOR: { get_input: rclone_vendor }
          RCLONE_CONFIG_RSHARE_USER: { get_input: rclone_user }
          RCLONE_CONFIG_RSHARE_PASS: { get_input: rclone_password }
          DISABLE_AUTHENTICATION_AND_ASSUME_AUTHENTICATED_USER: {get_input: flaat_disable}
          jupyterPASSWORD: {get_input: jupyter_password}
          APP_INPUT_OUTPUT_BASE_DIR: { get_input: app_in_out_base_dir }
        labels:
          HAPROXY_GROUP: "external"
        privileged: { get_input: docker_privileged }
      requirements:
      - host:
          node: "Docker"
          capability: "tosca.capabilities.indigo.Container.Docker"
          relationship: "tosca.relationships.HostedOn"
      artifacts:
        image:
          file: { get_input: docker_image }
          type: "tosca.artifacts.Deployment.Image.Container.Docker"
  outputs:
    Docker_image:
      value: { get_input: docker_image }
    Docker_num_cpus:
      value: { get_input: num_cpus }
    Docker_num_gpus:
      value: { get_input: num_gpus }
    command:
      value: { get_input: run_command }
    deepaas_endpoint:
      value:  { concat: [ 'http://', { get_attribute : [ marathon, load_balancer_ips, 0 ] }, ':', { get_attribute : [ Docker, host, publish_ports, 0, target ] } ] }
    monitor_endpoint:
      value:  { concat: [ 'http://', { get_attribute : [ marathon, load_balancer_ips, 0 ] }, ':', { get_attribute : [ Docker, host, publish_ports, 1, target ] } ] }
    jupyter_endpoint:
      value:  { concat: [ 'http://', { get_attribute : [ marathon, load_balancer_ips, 0 ] }, ':', { get_attribute : [ Docker, host, publish_ports, 2, target ] } ] }
